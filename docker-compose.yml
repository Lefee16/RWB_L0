# =============================================================================
# Shared Environment Variables (DRY principle)
# =============================================================================

x-db-environment: &x-db-environment
  POSTGRES_USER: ${DB_USER:-orderuser}
  POSTGRES_PASSWORD: ${DB_PASSWORD:-orderpass}
  POSTGRES_DB: ${DB_NAME:-orders_db}

x-app-environment: &x-app-environment
  # Runtime
  GOMAXPROCS: "2"

  # Application
  APP_NAME: ${APP_NAME:-RWB_L0}
  APP_VERSION: ${APP_VERSION:-1.0.0}
  APP_ENV: ${APP_ENV:-development}

  # Server
  SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
  SERVER_PORT: ${SERVER_PORT:-8080}
  SERVER_READ_TIMEOUT: ${SERVER_READ_TIMEOUT:-10s}
  SERVER_WRITE_TIMEOUT: ${SERVER_WRITE_TIMEOUT:-10s}

  # Database (override host for container network)
  DB_HOST: postgres
  DB_PORT: 5432
  DB_USER: ${DB_USER:-orderuser}
  DB_PASSWORD: ${DB_PASSWORD:-orderpass}
  DB_NAME: ${DB_NAME:-orders_db}
  DB_SSLMODE: ${DB_SSLMODE:-disable}
  DB_MAX_OPEN_CONNS: ${DB_MAX_OPEN_CONNS:-25}
  DB_MAX_IDLE_CONNS: ${DB_MAX_IDLE_CONNS:-5}

  # NATS Streaming (override URL for container network)
  NATS_URL: nats://nats:4222
  NATS_CLUSTER_ID: ${NATS_CLUSTER_ID:-test-cluster}
  NATS_CLIENT_ID: ${NATS_CLIENT_ID:-order-service-1}
  NATS_SUBJECT: ${NATS_SUBJECT:-orders}
  NATS_DURABLE_NAME: ${NATS_DURABLE_NAME:-order-service-durable}

  # Cache
  CACHE_ENABLED: ${CACHE_ENABLED:-true}
  CACHE_MAX_SIZE: ${CACHE_MAX_SIZE:-1000}
  CACHE_TTL_MINUTES: ${CACHE_TTL_MINUTES:-60}

  # Logging
  LOG_LEVEL: ${LOG_LEVEL:-info}
  LOG_FORMAT: ${LOG_FORMAT:-json}

# =============================================================================
# Services
# =============================================================================

services:
  # PostgreSQL Database
  postgres:
    container_name: rwb-l0-postgres
    image: postgres:16-alpine
    environment:
      <<: *x-db-environment
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_EXTERNAL_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-orderuser} -d ${DB_NAME:-orders_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - order-network
    restart: unless-stopped
    # Graceful shutdown: PostgreSQL needs time for transactions
    stop_grace_period: 60s
    stop_signal: SIGTERM

  # Database Migrations
  migrate:
    container_name: rwb-l0-migrate
    image: migrate/migrate:v4.17.1
    volumes:
      - ./migrations:/migrations
    command:
      - "-path"
      - "/migrations"
      - "-database"
      - "postgres://${DB_USER:-orderuser}:${DB_PASSWORD:-orderpass}@postgres:5432/${DB_NAME:-orders_db}?sslmode=disable"
      - "up"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - order-network
    restart: on-failure

  # NATS Streaming Server
  nats:
    container_name: rwb-l0-nats
    image: nats-streaming:0.25.6-alpine
    command:
      - "-p"
      - "4222"
      - "-m"
      - "8222"
      - "--cluster_id"
      - "${NATS_CLUSTER_ID:-test-cluster}"
      - "--store"
      - "file"
      - "--dir"
      - "/data"
      - "--max_channels"
      - "100"
      - "--max_subs"
      - "1000"
      - "--max_msgs"
      - "1000000"
      - "--max_bytes"
      - "1GB"
    volumes:
      - nats_data:/data
    ports:
      - "4222:4222"  # Client port
      - "8222:8222"  # HTTP monitoring port
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8222/streaming/channelsz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - order-network
    restart: unless-stopped
    # Graceful shutdown: NATS needs time to flush messages
    stop_grace_period: 30s
    stop_signal: SIGTERM

  # Order Service Application
  app:
    container_name: rwb-l0-app
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        GO_VERSION: ${GO_VERSION:-1.25}
    image: rwb-l0-app:latest
    environment:
      <<: *x-app-environment
    ports:
      - "${HTTP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "512M"
        reservations:
          cpus: "0.50"
          memory: "256M"
    networks:
      - order-network
    restart: unless-stopped
    # Graceful shutdown: app needs time to close connections
    stop_grace_period: 40s
    stop_signal: SIGTERM

# =============================================================================
# Networks
# =============================================================================

networks:
  order-network:
    driver: bridge
    name: rwb-l0-network

# =============================================================================
# Volumes
# =============================================================================

volumes:
  postgres_data:
    driver: local
    name: rwb-l0-postgres-data
  nats_data:
    driver: local
    name: rwb-l0-nats-data
